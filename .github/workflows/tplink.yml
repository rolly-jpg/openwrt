name: Build tplink
on: [push]
jobs:
    build:
        name: Prepare and build tplink
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a
            - name: Generate config for tplink
              run: |
                echo "CONFIG_TARGET_ath79=y\n" > .config
                echo "CONFIG_TARGET_ath79_tiny=y\n" >> .config
                echo "CONFIG_TARGET_MULTI_PROFILE=y\n" >> .config
                echo "CONFIG_TARGET_PER_DEVICE_ROOTFS=y\n" >> .config
                echo "CONFIG_TARGET_DEVICE_ath79_tiny_DEVICE_tplink_tl-wr940n-v6=y\n" >> .config
                echo "CONFIG_PACKAGE_luci=n\n" >> .config
                make defconfig
            - name: Download package sources
              run: make download V=s
            - name: Build tools
              run: |
                make tools/install -j$(nproc) V=s || \
                make tools/install V=s
            - name: Build toolchain
              run: |
                make toolchain/install -j$(nproc) V=s || \
                make toolchain/install V=s
            - name: Build target images
              run: |
                make -j$(nproc) V=s || \
                make V=s
            - name: TAR output
              run: tar -cvf filogicx-images.tar bin/targets/ath79/tiny/
            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                name: tiny-images
                path: tinyx-images.tar
    release:
          name: Make a release
          runs-on: ubuntu-latest
          needs: build
          steps:
            - name: Download the image artifacts
              uses: actions/download-artifact@v3
              with:
                name: tiny-images
            - name: Extract the image artifacts
              run: tar xf tinyx-images.tar
            - name: Get the current date
              run: echo "NOW=$(date +%F)" >> $GITHUB_ENV
            - name: Create a release
              uses: "marvinpinto/action-automatic-releases@latest"
              with:
                repo_token: "${{ secrets.GITHUB_TOKEN }}"
                prerelease: true
                title: "tplink ${{ env.NOW }}"
                automatic_release_tag: "tiny-${{ env.NOW }}"
                auto_generate_release_notes: true
                files: bin/targets/ath79/tiny/*
